   # - name: Install docker
    # yum: name=docker-engine state=latest
   
   # - name: Install pip
    # yum: name=python-pip state=latest

   - name: Install docker-py
     pip: name=docker-py state=latest

   - name: Install passlib
     pip: name=passlib state=latest
   
   - name: Docker service check
     service: name=docker state=started

   - name: kibana
     docker:
      name: kibana
      image: kibana
      docker_api_version: "1.21"
      state: started
      restart_policy: always
      pull: always
      memory_limit: "512MB"
      env:
        ELASTICSEARCH_URL: "{{ ES_HOST }}"

   - name: Install sourcebans from git
     git: repo="https://github.com/Sarabveer/SourceBans-Fork" dest="{{ lookup('env','HOME') }}/.docker-container-configs/sourcebans/www/" version="v1.x" force=yes
   
   - name: Sourcebans database config
     template: src=sb-config.php.j2 dest="{{ lookup('env','HOME') }}/.docker-container-configs/sourcebans/www/web_upload/config.php" mode=0600
   
   - name: chmod'ing server dir
     shell: chmod -c -R 0500 "{{ lookup('env','HOME') }}/.docker-container-configs/sourcebans/www/"
     register: chmod_result
     changed_when: "chmod_result.stdout != \"\""

   - name: Chmod
     file: path="{{ lookup('env','HOME') }}/.docker-container-configs/sourcebans/www/web_upload/{{ item.src }}" mode={{ item.mode }}
     with_items:
     - { src: 'demos/', mode: '0600' }
     - { src: 'themes_c/', mode: '0700' }
     - { src: 'images/games/', mode: '0600' }
     - { src: 'images/maps/', mode: '0600' }
     - { src: 'config.php', mode: '0600' }
   
   - name: Delete install folders
     file: path="{{ lookup('env','HOME') }}/.docker-container-configs/sourcebans/www/web_upload/{{ item.path }}/" state=absent
     with_items:
     - { path: 'install' }
     - { path: 'updater' }
     
   - name: Install sourcebans container
     docker:
      name: sourcebans
      image: tutum/apache-php
      docker_api_version: "1.21"
      state: restarted
      restart_policy: always
      pull: always
      memory_limit: "300MB"
      volumes:
      - "{{ lookup('env','HOME') }}/.docker-container-configs/sourcebans/www/:/app/"

   - name: Create reverse-nginx directory
     file: path="{{ lookup('env','HOME') }}/.docker-container-configs/reverse-nginx/conf.d/" state=directory
 
   - name: Nginx config
     template: src=reverse-nginx.conf.j2 dest="{{ lookup('env','HOME') }}/.docker-container-configs/reverse-nginx/conf.d/reverse-proxy.conf" mode=0600
   
   - name: Generate htpasswd file
     htpasswd: path="{{ lookup('env','HOME') }}/.docker-container-configs/reverse-nginx/conf.d/htpasswd.users" name="{{ item.key }}" password="{{ item.value[0] }}"
     with_dict: "{{ HTPASSWD }}"
   
   - name: reverse-nginx
     docker:
      name: reverse-nginx
      image: nginx
      docker_api_version: "1.21"
      state: started
      restart_policy: always
      pull: always
      memory_limit: "100MB"
      volumes:
      - "{{ lookup('env','HOME') }}/.docker-container-configs/reverse-nginx/conf.d/:/etc/nginx/conf.d/:ro"
      - "{{ lookup('env','HOME') }}/.docker-container-configs/reverse-nginx/conf.d/htpasswd.users:/etc/nginx/htpasswd.users:ro"
      links:
      - "kibana"
      - "sourcebans"
      ports:
      - "80:80"